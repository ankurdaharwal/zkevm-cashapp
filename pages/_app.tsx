import { ThirdwebProvider } from "@thirdweb-dev/react";
import { CHAIN } from "../const/chains";
import { Inter } from "next/font/google";
import Head from "next/head";
import "../styles/globals.css";
import type { AppProps } from "next/app";
import {
  LensProvider,
  development,
  production,
} from "@lens-protocol/react-web";
import { JsonRpcProvider } from "@ethersproject/providers";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";

const inter = Inter({ subsets: ["latin"] });

function MyApp({ Component, pageProps }: AppProps) {
  const queryClient = new QueryClient();

  return (
    <div className={inter.className}>
      <Head>
        <title>Lens Pay</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <QueryClientProvider client={queryClient}>
          <ThirdwebProvider
            // Set active chain for app
            activeChain={CHAIN}
            // Auth (SIWE) configuration
            authConfig={{
              domain: process.env.NEXT_PUBLIC_AUTH_DOMAIN || "evmkit.com", // Your website domain
              authUrl: "/api/auth", // API Route (default is - pages/api/auth/[...thirdweb].ts)
            }}
            clientId={process.env.NEXT_PUBLIC_THIRDWEB_API_KEY}
            queryClient={queryClient}
          >
            <LensProvider
              config={{
                environment: development,
                bindings: {
                  // @ts-ignore, we never use write operations in this Lens app so we don't need a signer.
                  getSigner: async () => undefined,
                  getProvider: async () =>
                    new JsonRpcProvider("https://mumbai.rpc.thirdweb.com"),
                },
              }}
            >
              <Component {...pageProps} />
            </LensProvider>
          </ThirdwebProvider>
        </QueryClientProvider>
      </main>
    </div>
  );
}

export default MyApp;
